<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: c++,c++11,stl,programming,boost | antonym.org]]></title>
  <link href="http://antonym.org//blog/categories/c-plus-plus-c-plus-plus-11-stl-programming-boost/atom.xml" rel="self"/>
  <link href="http://antonym.org//"/>
  <updated>2014-01-15T11:09:22+11:00</updated>
  <id>http://antonym.org//</id>
  <author>
    <name><![CDATA[Gavin Baker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Boost now and C++11 later]]></title>
    <link href="http://antonym.org//2014/01/boost-now-and-c-plus-plus-11-later.html"/>
    <updated>2014-01-14T20:16:00+11:00</updated>
    <id>http://antonym.org//2014/01/boost-now-and-c-plus-plus-11-later</id>
    <content type="html"><![CDATA[<p>The C++11 standard has been around for a few years now (first published in
XXXX).  We are fortunate that both the <code>gcc</code> project and the <code>clang</code> project
have implemented comprehensive support for the new language and library
features.  So if you&rsquo;re using the current versions of these tools, you can take
advantage of all the new features right now.</p>

<p>Unfortunately, some of the larger compiler vendors are still lagging in their
support for the new, shiny C++11 features.  A thorough summary of major compiler
support is available ***.</p>

<p>Whether your project is constrained by toolchain support, 3rd party library
support, or upgrading your toolchain isn&rsquo;t currently feasible, there are ways
to get many of the new features &lsquo;for free&rsquo;.</p>

<p>Fortunately, the <a href="http://www.boost.org/">Boost project</a> provides an unofficial
staging ground for many new C++ library features.  So all the new goodness
with <code>unique_ptr</code> and friends can be had right now, simply by using Boost.</p>
]]></content>
  </entry>
  
</feed>
